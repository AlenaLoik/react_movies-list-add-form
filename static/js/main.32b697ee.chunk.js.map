{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","urlPattern","state","viewError","handleSubmit","event","preventDefault","Date","now","test","props","addMovie","setState","onSubmit","this","onChange","target","value","type","Component","App","moviesFromServer","prewState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32b697ee.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  /* eslint-disable-next-line */\n  urlPattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    viewError: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title, description, imgUrl, imdbUrl } = this.state;\n    const imdbId = +Date.now();\n\n    const movie = {\n      title, description, imgUrl, imdbUrl, imdbId,\n    };\n\n    if (!this.urlPattern.test(imgUrl)) {\n      this.setState({\n        imgUrl: '',\n        viewError: true,\n      });\n    } else if (!this.urlPattern.test(imdbUrl)) {\n      this.setState({\n        imdbUrl: '',\n        viewError: true,\n      });\n    } else if (title && imgUrl && imdbUrl) {\n      this.props.addMovie(movie);\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        viewError: false,\n      });\n    } else {\n      this.setState({\n        viewError: true,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          <p className=\"form__title\">title</p>\n          <input\n            onChange={(event) => {\n              this.setState({ title: event.target.value });\n            }}\n            type=\"text\"\n            value={this.state.title}\n          />\n        </label>\n        <p className={(!this.state.title && this.state.viewError)\n          ? 'error' : 'no-error'}\n        >\n          Plese entered title...\n        </p>\n        <label>\n          <p className=\"form__title\">description</p>\n          <textarea\n            onChange={(event) => {\n              this.setState({ description: event.target.value });\n            }}\n            type=\"text\"\n            value={this.state.description}\n          />\n        </label>\n        <label>\n          <p className=\"form__title\">imgUrl</p>\n          <input\n            onChange={(event) => {\n              this.setState({ imgUrl: event.target.value });\n            }}\n            type=\"text\"\n            value={this.state.imgUrl}\n          />\n        </label>\n        <p className={(!this.state.imgUrl && this.state.viewError)\n          ? 'error' : 'no-error'}\n        >\n          Plese entered correct imgUrl...\n        </p>\n        <label>\n          <p className=\"form__title\">imdbUrl</p>\n          <input\n            onChange={(event) => {\n              this.setState({ imdbUrl: event.target.value });\n            }}\n            type=\"text\"\n            value={this.state.imdbUrl}\n          />\n        </label>\n        <p className={(!this.state.imdbUrl && this.state.viewError)\n          ? 'error' : 'no-error'}\n        >\n          Plese entered correct imdbUrl...\n        </p>\n        <button className=\"button\" type=\"submit\">add</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prewState => ({\n      movies: [...prewState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}